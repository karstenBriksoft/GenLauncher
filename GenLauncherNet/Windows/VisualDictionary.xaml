<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:GenLauncherNet"
                    >
    

    <ImageBrush x:Key="GenLauncherBackGroundImage" ImageSource="/Images/Background.png"/>

    <SolidColorBrush x:Key="GenLauncherBorderColor" Color="#00e3ff"/>
    <SolidColorBrush x:Key="GenLauncherInactiveBorder" Color="DarkGray"/>
    <SolidColorBrush x:Key="GenLauncherInactiveBorder2" Color="#7a7db0"/>
    <SolidColorBrush x:Key="GenLauncherActiveColor" Color="#baff0c"/>
    <SolidColorBrush x:Key="GenLauncherDarkFillColor" Color="#232977"/>
    <SolidColorBrush x:Key="GenLauncherDarkBackGround" Color="#090502"/>
    <SolidColorBrush x:Key="GenLauncherLightBackGround" Color="#B3000000"/>
    <SolidColorBrush x:Key="GenLauncherDefaultTextColor" Color="White"/>
    <SolidColorBrush x:Key="GenLauncherDownloadTextColor" Color="#090502"/>

    <Color x:Key="GenLauncherListBoxSelectionColor2">#F21d2057</Color>
    <Color x:Key="GenLauncherListBoxSelectionColor1">#E61d2057</Color>
    <Color x:Key="GenLauncherButtonSelectionColor">#2534ff</Color>

    <SolidColorBrush x:Key="StandardBorderBrush" Color="#00000000" />
    <SolidColorBrush x:Key="StandardBackgroundBrush" Color="#00000000" />
    <SolidColorBrush x:Key="HoverBorderBrush" Color="#00000000" />
    <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#00000000" />
    <SolidColorBrush x:Key="SelectedForegroundBrush" Color="#00000000" />
    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#00000000" />





    <Style x:Key="FocusVisual2">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <LinearGradientBrush x:Key="ListBoxBackgroundBrush"
            StartPoint="0,0" EndPoint="1,0.001">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#00000000" Offset="0.0" />
                <GradientStop Color="#00000000" Offset="0.6" />
                <GradientStop Color="#00000000" Offset="1.2"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="StandardBrush"
            StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#00000000" Offset="0.0"/>
                <GradientStop Color="#00000000" Offset="1.0"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border
          x:Name="Border"
          Margin="1"
          CornerRadius="0"
          Background="{DynamicResource GenLauncherDarkBackGround}"
          BorderBrush="{DynamicResource GenLauncherBorderColor}"
          BorderThickness="1.5">
                        <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{DynamicResource GenLauncherInactiveBorder2}" Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background"
                                Value="{DynamicResource GenLauncherDarkFillColor}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground"
                                Value="{DynamicResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="#00000000" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border
          CornerRadius="0"
          Background="{TemplateBinding Background}"
          BorderBrush="{TemplateBinding BorderBrush}"
          BorderThickness="1.5" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar"
            TargetType="{x:Type ScrollBar}">
        <Grid >
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="18"/>
                <RowDefinition Height="0.00001*"/>
                <RowDefinition MaxHeight="18"/>
            </Grid.RowDefinitions>
            <Border
      Grid.RowSpan="3"
      CornerRadius="0"
      Background="#00000000" />
            <RepeatButton
      Grid.Row="0"
      Style="{DynamicResource ScrollBarLineButton}"
      Height="18"
      Command="ScrollBar.LineUpCommand"
      Content="M 0 4 L 8 4 L 4 0 Z" />
            <Track
      x:Name="PART_Track"
      Grid.Row="1"
      IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton
          Style="{DynamicResource ScrollBarPageButton}"
          Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb
          Style="{DynamicResource ScrollBarThumb}"
          Margin="1,0,1,0"
          Background="{DynamicResource GenLauncherDarkFillColor}"
          BorderBrush="{DynamicResource GenLauncherBorderColor}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton
          Style="{DynamicResource ScrollBarPageButton}"
          Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton
      Grid.Row="3"
      Style="{DynamicResource ScrollBarLineButton}"
      Height="18"
      Command="ScrollBar.LineDownCommand"
      Content="M 0 0 L 4 4 L 8 0 Z"/>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="HorizontalScrollBar"
            TargetType="{x:Type ScrollBar}">
        <Grid >
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="18"/>
                <ColumnDefinition Width="0.00001*"/>
                <ColumnDefinition MaxWidth="18"/>
            </Grid.ColumnDefinitions>
            <Border
      Grid.ColumnSpan="3"
      CornerRadius="0"
      Background="#F0F0F0" />
            <RepeatButton
      Grid.Column="0"
      Style="{DynamicResource ScrollBarLineButton}"
      Width="18"
      Command="ScrollBar.LineLeftCommand"
      Content="M 4 0 L 4 8 L 0 4 Z" />
            <Track
      x:Name="PART_Track"
      Grid.Column="1"
      IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton
          Style="{DynamicResource ScrollBarPageButton}"
          Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb
          Style="{DynamicResource ScrollBarThumb}"
          Margin="0,1,0,1"
          Background="{DynamicResource GenLauncherDarkBackGround}"
          BorderBrush="{DynamicResource GenLauncherBorderColor}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton
          Style="{DynamicResource ScrollBarPageButton}"
          Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton
      Grid.Column="3"
      Style="{DynamicResource ScrollBarLineButton}"
      Width="18"
      Command="ScrollBar.LineRightCommand"
      Content="M 0 0 L 4 4 L 0 8 Z"/>
        </Grid>
    </ControlTemplate>
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="18" />
                <Setter Property="Template"
                        Value="{DynamicResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="18"/>
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template"
                        Value="{DynamicResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FavsScrollViewer" TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <ScrollContentPresenter Grid.Column="1"/>

                        <ScrollBar x:Name="PART_VerticalScrollBar"
            Value="{TemplateBinding VerticalOffset}"
            Maximum="{TemplateBinding ScrollableHeight}"
            ViewportSize="{TemplateBinding ViewportHeight}"
            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                        <ScrollBar x:Name="PART_HorizontalScrollBar"
            Orientation="Horizontal"
            Grid.Row="1"
            Grid.Column="1"
            Value="{TemplateBinding HorizontalOffset}"
            Maximum="{TemplateBinding ScrollableWidth}"
            ViewportSize="{TemplateBinding ViewportWidth}"
            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="0"
                  Background="{DynamicResource GenLauncherDarkFillColor}"
                  BorderBrush="{DynamicResource GenLauncherBorderColor}"
                  BorderThickness="1" />
            <Border
                  x:Name="TextBoxBorder"
                  Grid.Column="0"
                  CornerRadius="0" 
                  Margin="1" 
                  Background="{DynamicResource GenLauncherDarkFillColor}"
                  BorderBrush="{DynamicResource GenLauncherBorderColor}"
                  BorderThickness="0,0,1,0" />
            <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="{DynamicResource GenLauncherBorderColor}"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource GenLauncherDarkBackGround}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource GenLauncherInactiveBorder2}" />
                <Setter TargetName="TextBoxBorder" Property="Background" Value="{DynamicResource GenLauncherDarkBackGround}" />
                <Setter TargetName="TextBoxBorder" Property="BorderBrush" Value="{DynamicResource GenLauncherInactiveBorder2}" />
                <Setter Property="Foreground" Value="#888888"/>
                <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">

        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />

    </ControlTemplate>

    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton 
                            Name="ToggleButton" 
                            Template="{DynamicResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{DynamicResource ComboBoxTextBox}" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="3,3,23,3"
                            Focusable="True" 
                            Background="#FF3F3F3F"
                            Foreground="Green"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">

                            <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border 
                                x:Name="DropDownBorder"
                                Background="{DynamicResource GenLauncherDarkFillColor}"

                                BorderThickness="1"
                                BorderBrush="{DynamicResource GenLauncherBorderColor}"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            <Setter Property="ScrollViewer.Foreground" Value="Red"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable"  Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="Border"
                              Padding="2"
                              SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource GenLauncherInactiveBorder2}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisual2}"/>
        <Setter Property="Background" Value="{DynamicResource GenLauncherLightBackGround}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource GenLauncherBorderColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>

        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource ButtonPressedBackground}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource GenLauncherBorderColor}"/>
                            <Setter Property="Foreground" Value="{DynamicResource GenLauncherActiveColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{DynamicResource GenLauncherLightBackGround}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource GenLauncherBorderColor}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource GenLauncherDarkBackGround}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource GenLauncherInactiveBorder2}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource GenLauncherInactiveBorder}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListBoxItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="border" BorderThickness="2" BorderBrush="{DynamicResource GenLauncherInactiveBorder}">
                        <ContentPresenter></ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="border"  Property="Background" Value="{DynamicResource ListBoxSelectedItemBackground}"></Setter>
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource GenLauncherBorderColor}"></Setter>
                        </Trigger>

                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="border"  Property="Background" Value="#00000000"></Setter>
                        </Trigger>


                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
        <Setter Property="AllowDrop" Value="True"/>

        <!--<EventSetter Event="PreviewMouseLeftButtonDown" Handler="ListBoxItem_PreviewMouseLeftButtonDown"/>
        <EventSetter Event="Drop" Handler="ListBoxItem_Drop" />
        <EventSetter Event="GiveFeedback" Handler="ModsList_GiveFeedback" />-->
    </Style>

    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border BorderThickness="1" BorderBrush="{DynamicResource GenLauncherBorderColor}" x:Name="Border" Background="{DynamicResource GenLauncherDarkBackGround}">
                        <StackPanel ClipToBounds="True" Orientation="Vertical" IsItemsHost="True" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="{DynamicResource GenLauncherActiveColor}"/>
        <Setter Property="Background" Value="{DynamicResource GenLauncherDarkBackGround}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource GenLauncherInactiveBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid x:Name="TemplateRoot">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate"/>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Animation">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)" Storyboard.TargetName="Animation">
                                            <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5"/>
                                        </PointAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                        <Rectangle x:Name="PART_Track"/>
                        <Grid x:Name="PART_Indicator" ClipToBounds="true" HorizontalAlignment="Left">
                            <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}"/>
                            <Rectangle x:Name="Animation" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5">
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Rectangle.RenderTransform>
                            </Rectangle>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="UpdateButtonStyle" TargetType="{x:Type local:UpdateButton}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisual2}"/>
        <Setter Property="Background" Value="{DynamicResource GenLauncherLightBackGround}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource GenLauncherBorderColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Opacity" Value="1"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource ButtonPressedBackground}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource GenLauncherBorderColor}"/>
                            <Setter Property="Foreground" Value="{DynamicResource GenLauncherActiveColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource GenLauncherBorderColor}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource GenLauncherDarkBackGround}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource GenLauncherInactiveBorder2}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource GenLauncherInactiveBorder}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <LinearGradientBrush x:Key="ListBoxSelectedItemBackground" EndPoint="1,0" StartPoint="0,0">
        <GradientStop Color="{DynamicResource GenLauncherListBoxSelectionColor1}" Offset="0.0"/>
        <GradientStop Color="{DynamicResource GenLauncherListBoxSelectionColor2}" Offset="0.7"/>
        <GradientStop Color="#00000000" Offset="1.0"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="MenuItemSelectionFill" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="{DynamicResource GenLauncherButtonSelectionColor}" Offset="0"/>
        <GradientStop Color="{DynamicResource GenLauncherButtonSelectionColor}"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ButtonPressedBackground" EndPoint="1,0" StartPoint="0,0">
        <GradientStop Color="#B3000000" Offset="0"/>
        <GradientStop Color="{DynamicResource GenLauncherButtonSelectionColor}" Offset="0.1"/>
        <GradientStop Color="{DynamicResource GenLauncherButtonSelectionColor}" Offset="0.9"/>
        <GradientStop Color="#B3000000" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DragAndDropBackground" EndPoint="1,0" StartPoint="0,0">
        <GradientStop Color="{DynamicResource GenLauncherListBoxSelectionColor2}" Offset="0"/>
        <GradientStop Color="{DynamicResource GenLauncherListBoxSelectionColor2}" Offset="1"/>
    </LinearGradientBrush>

    <DataTemplate x:Key="VersionTemplate" >
        <Grid x:Name="GridItem">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="160" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <TextBlock Foreground="{DynamicResource GenLauncherDefaultTextColor}" x:Name="Name" Grid.Column="0" Text="{Binding VersionName}" HorizontalAlignment="Center" VerticalAlignment="Center" Width="150" />
            <Button Foreground="{DynamicResource GenLauncherDefaultTextColor}" Style="{DynamicResource DefaultButtonStyle}" x:Name="Delete"  Content="Delete" Grid.Column="1" HorizontalAlignment="Center" Click="DeleteVersion_Click" Width="45"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="ModificationTemplate">
        <Grid x:Name="GridItem" Loaded="GridItem_Loaded" Width="550">

            <Grid.ContextMenu>
                <ContextMenu Opened="ContextMenu_Opened" >
                    <MenuItem Header="Open mod folder" Click="OpenModFolder" FontSize="16" HorizontalAlignment="Left" Foreground="{DynamicResource GenLauncherDefaultTextColor}"/>
                    <MenuItem Header="Open game folder" Click="OpenGameFolder" FontSize="16" HorizontalAlignment="Left" Foreground="{DynamicResource GenLauncherDefaultTextColor}"/>
                    <MenuItem Header="Open maps folder" Click="OpenMapsFolder" FontSize="16" HorizontalAlignment="Left" Foreground="{DynamicResource GenLauncherDefaultTextColor}"/>
                    <MenuItem Header="Open replays folder" Click="OpenReplaysFolder" FontSize="16" HorizontalAlignment="Left" Foreground="{DynamicResource GenLauncherDefaultTextColor}"/>
                    <Separator Margin="-30,5,25,5"></Separator>
                    <MenuItem Header="Visit ModdB page" Click="OpenModdbLink" FontSize="18" HorizontalAlignment="Left" Foreground="{DynamicResource GenLauncherDefaultTextColor}"/>
                    <MenuItem Header="Join Discord Server" Click="OpenDiscordLink" FontSize="18" HorizontalAlignment="Left" Foreground="{DynamicResource GenLauncherDefaultTextColor}"/>
                </ContextMenu >
            </Grid.ContextMenu>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="310" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="40" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="23"/>
                <RowDefinition Height="23"/>
                <RowDefinition Height="50"/>
                <RowDefinition Height="50"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="33"/>
            </Grid.RowDefinitions>

            <Rectangle x:Name="ContextMenuRectangle" Fill="White" Grid.RowSpan="10" Grid.ColumnSpan="10" Opacity="0">

            </Rectangle>

            <Rectangle x:Name="DragAndDropBackground" Fill="{DynamicResource DragAndDropBackground}" Visibility="Hidden" Margin="-6,0,-6,0"  Grid.RowSpan="10" Grid.ColumnSpan="10">

            </Rectangle>

            <local:NameTextBox x:Name="Name" FontSize="15" Margin="10,0,10,0" Foreground="{DynamicResource GenLauncherInactiveBorder}" VerticalAlignment="Center" TextWrapping="Wrap" Grid.Row="0" Grid.Column="0" Text="{Binding NameInfo}" HorizontalAlignment="Left" />
            <local:VersionTextBox x:Name="LastVersion" Margin="10,0,10,0" FontSize="15" Foreground="{DynamicResource GenLauncherInactiveBorder}" VerticalAlignment="Center" Grid.Row="1" Grid.Column="0" Text="{Binding LatestVersionInfo}" HorizontalAlignment="Left" />
            <ComboBox MouseEnter="BlockDragAndDrop" MouseLeave="EnableDragAndDrop" x:Name="VersionsList" Height="30" Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" Grid.ColumnSpan="3" ItemTemplate="{DynamicResource VersionTemplate}" SelectionChanged="VersionsList_SelectionChanged" Margin="0,0,5,0" Visibility="Hidden">
            </ComboBox>

            <Border BorderThickness="2" BorderBrush="{DynamicResource GenLauncherInactiveBorder}" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="4" Grid.RowSpan="2" Margin="23,-2,23,-2">

            </Border>

            <Image Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="4" Grid.RowSpan="2"  Source="{Binding ImageSource}" Height="100" Width="500" Margin="0,0,0,0" />

            <Rectangle Margin="25, 0, 25, 0" Grid.Row="2" Visibility="Hidden" x:Name="UpdateRectangle" Grid.Column="0" Grid.ColumnSpan="4" Grid.RowSpan="2">
                <Rectangle.Fill>
                    <LinearGradientBrush x:Name="UpdateBrush">
                        <GradientStop x:Name="GradientStop1" Color="{DynamicResource GenLauncherButtonSelectionColor}" Offset="0.0" />
                        <GradientStop x:Name="GradientStop2" Color="Transparent" Offset="0.35" />
                        <GradientStop x:Name="GradientStop3" Color="Transparent" Offset="0.65" />
                        <GradientStop x:Name="GradientStop4" Color="{DynamicResource GenLauncherButtonSelectionColor}" Offset="1.0" />
                    </LinearGradientBrush>
                </Rectangle.Fill>
                <Rectangle.Triggers>
                    <EventTrigger RoutedEvent="Rectangle.Loaded">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="UpdateBrush" Storyboard.TargetProperty="Opacity" From="0.0" To="0.75" Duration="0:0:0.5" AutoReverse="True" RepeatBehavior="7x"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Rectangle.Triggers>
            </Rectangle>

            <ProgressBar Grid.Row="4" Grid.ColumnSpan="4" HorizontalAlignment="Stretch" Height="20" VerticalAlignment="Center" Margin="10,0,10,0" BorderBrush="{DynamicResource GenLauncherInactiveBorder}"/>
            <local:InfoTextBlock MouseEnter="BlockDragAndDrop" MouseLeave="EnableDragAndDrop" FontWeight="Bold" Grid.Row="4" Foreground="Black" Opacity="1" Grid.ColumnSpan="4" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="25,0,40,0"/>
            <local:UpdateButton  MouseEnter="UpdateButton_MouseEnter" MouseLeave="EnableDragAndDrop" Foreground="{DynamicResource GenLauncherDefaultTextColor}" Style="{DynamicResource UpdateButtonStyle}" Opacity="1" x:Name="Update" Content="UPDATE!" Grid.Row="6" Grid.Column="0" Click="Update_Click" HorizontalAlignment="Left" Margin="10,-5,10,0" Width="140" Height="30" FontSize="15"/>
            <local:UpdateButton  MouseEnter="UpdateButton_MouseEnter" MouseLeave="EnableDragAndDrop" Foreground="{DynamicResource GenLauncherDefaultTextColor}" Style="{DynamicResource UpdateButtonStyle}" Opacity="1" x:Name="Support" Content="Donate" Click="Support_Click" Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Left" Margin="190,-5,10,0" Width="100" Height="30" FontSize="15"/>
            <local:NetworkInfoButton MouseEnter="BlockDragAndDrop" MouseLeave="EnableDragAndDrop" Foreground="{DynamicResource GenLauncherDefaultTextColor}" Style="{DynamicResource DefaultButtonStyle}" Opacity="1" x:Name="NetworkInfo" Content="How to play online?" Click="NetworkInfo_Click" Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="6" HorizontalAlignment="Center" Margin="230,-5, 0,0" Width="150" Height="30" FontSize="15"/>
            <local:ChangeLogButton MouseEnter="BlockDragAndDrop" MouseLeave="EnableDragAndDrop" Foreground="{DynamicResource GenLauncherDefaultTextColor}" Style="{DynamicResource DefaultButtonStyle}" Opacity="1" x:Name="Change" Content="ChangeLog" Grid.Column="1" Grid.ColumnSpan="3" Grid.Row="6" Click="Change_Click" HorizontalAlignment="Right" Margin="10,-5,10,0" Width="90" Height="30" FontSize="15"/>

        </Grid>
    </DataTemplate>

    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="true">
            <Rectangle x:Name="Bg" Fill="{TemplateBinding Background}" RadiusY="2" RadiusX="2" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1"/>
            <Rectangle x:Name="InnerBorder" Margin="1" RadiusY="2" RadiusX="2"/>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="180"/>
                </Grid.ColumnDefinitions>

                <ContentPresenter Grid.Column="0" ContentSource="Header" Margin="10,0,0,0" Height="24" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Fill" TargetName="Bg" Value="{DynamicResource MenuItemSelectionFill}"/>
                <Setter Property="Stroke" TargetName="Bg" Value="{DynamicResource MenuItemSelectionFill}"/>
                <Setter Property="Stroke" TargetName="InnerBorder" Value="{DynamicResource GenLauncherActiveColor}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <DataTemplate x:Key="AddonsTemplate">
        <Grid x:Name="GridItem" Loaded="GridItem_Loaded"  Width="550">

            <Grid.ContextMenu>
                <ContextMenu Opened="ContextMenu_Opened" >
                    <MenuItem Header="Open addon folder" Click="OpenModFolder" FontSize="16" HorizontalAlignment="Left" Foreground="{DynamicResource GenLauncherDefaultTextColor}"/>
                    <MenuItem Header="Open game folder" Click="OpenGameFolder" FontSize="16" HorizontalAlignment="Left" Foreground="{DynamicResource GenLauncherDefaultTextColor}"/>
                </ContextMenu >
            </Grid.ContextMenu>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="310" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="40" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="23"/>
                <RowDefinition Height="23"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="33"/>
            </Grid.RowDefinitions>

            <Rectangle x:Name="ContextMenuRectangle" Fill="White" Grid.RowSpan="10" Grid.ColumnSpan="10" Opacity="0">

            </Rectangle>

            <local:NameTextBox x:Name="Name" FontSize="13" FontWeight="Bold" Margin="10,0,10,0" Foreground="{DynamicResource GenLauncherInactiveBorder}" VerticalAlignment="Center" TextWrapping="Wrap" Grid.Row="0" Grid.Column="0"  Grid.ColumnSpan="2" Text="{Binding NameInfo}" HorizontalAlignment="Left" />
            <local:VersionTextBox x:Name="LastVersion" Margin="10,0,10,0" FontSize="15" Foreground="{DynamicResource GenLauncherInactiveBorder}" VerticalAlignment="Center" Grid.Row="1" Grid.Column="0" Text="{Binding LatestVersionInfo}" HorizontalAlignment="Left" />
            <ComboBox x:Name="VersionsList" Height="30" Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" Grid.ColumnSpan="3" ItemTemplate="{DynamicResource VersionTemplate}" SelectionChanged="VersionsList_SelectionChanged" Margin="0,0,5,0" Visibility="Hidden">

            </ComboBox>

            <ProgressBar Grid.Row="2" Grid.ColumnSpan="4" HorizontalAlignment="Stretch" Height="20" VerticalAlignment="Center" Margin="10,0,10,0" BorderBrush="{DynamicResource GenLauncherInactiveBorder}"/>
            <local:InfoTextBlock FontWeight="Bold" Grid.Row="2" Foreground="Black" Opacity="1" Grid.ColumnSpan="4" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="40,0,40,0"/>
            <local:UpdateButton Foreground="{DynamicResource GenLauncherDefaultTextColor}" Style="{DynamicResource DefaultButtonStyle}" Opacity="1" x:Name="Update" Content="Update!" Grid.Row="3" Grid.Column="0" Click="Update_Click" HorizontalAlignment="Left" Margin="10,-5,10,0" Width="140" Height="30" FontSize="18"/>
            <local:ChangeLogButton Foreground="{DynamicResource GenLauncherDefaultTextColor}" Style="{DynamicResource DefaultButtonStyle}" Opacity="1" x:Name="Change" Content="ChangeLog / News" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="3" Click="Change_Click" HorizontalAlignment="Right" Margin="5,-5,5,0" Width="140" Height="30" FontSize="15"/>
            <local:NetworkInfoButton Foreground="{DynamicResource GenLauncherDefaultTextColor}" Style="{DynamicResource DefaultButtonStyle}" Opacity="1" x:Name="NetworkInfo" Click="NetworkInfo_Click" Content="How to play online?" Grid.Column="0" Grid.Row="3" HorizontalAlignment="Right" Margin="0,-5,-40,0" Width="150" Height="30" FontSize="15"/>

        </Grid>
    </DataTemplate>

</ResourceDictionary>